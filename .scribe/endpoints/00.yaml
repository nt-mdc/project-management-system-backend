name: 'User management'
description: |-

  This API provides comprehensive authentication management capabilities, including user registration, login, and logout operations.
  Its endpoints allow for secure user authentication, issuance of access tokens, ensuring data protection and adherence to security best practices.
endpoints:
  -
    httpMethods:
      - POST
    uri: api/auth/register
    metadata:
      groupName: 'User management'
      groupDescription: |-

        This API provides comprehensive authentication management capabilities, including user registration, login, and logout operations.
        Its endpoints allow for secure user authentication, issuance of access tokens, ensuring data protection and adherence to security best practices.
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a user.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the user.'
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      email:
        name: email
        description: 'The email of the user and this email must to be unique.'
        required: true
        example: john.doe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      password:
        name: password
        description: "The user's password. Must be at least 8 characters long, including letters, numbers, symbols, and at least one uppercase and one lowercase letter."
        required: true
        example: '@123User'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      email: john.doe@example.com
      password: '@123User'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "message": "User registered successfully",
            "user": {
                "name": "John Doe",
                "email": "john.doe@example.com",
                "updated_at": "2024-08-24T13:50:23.000000Z",
                "created_at": "2024-08-24T13:50:23.000000Z",
                "id": 78
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
             "message": "The name field must be a string. (and 5 more errors)",
             "errors": {
                 "name": [
                     "The name field must be a string."
                 ],
                 "email": [
                     "The email has already been taken."
                 ],
                 "password": [
                     "The password field must be at least 8 characters.",
                     "The password field must contain at least one uppercase and one lowercase letter.",
                     "The password field must contain at least one symbol.",
                     "The password field must contain at least one number."
                 ]
             }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/login
    metadata:
      groupName: 'User management'
      groupDescription: |-

        This API provides comprehensive authentication management capabilities, including user registration, login, and logout operations.
        Its endpoints allow for secure user authentication, issuance of access tokens, ensuring data protection and adherence to security best practices.
      subgroup: ''
      subgroupDescription: ''
      title: 'Login the user.'
      description: 'It is at this endpoint that you will obtain the Bearer token to access other routes that require authentication.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email of the user.'
        required: true
        example: john.doe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      password:
        name: password
        description: "The user's password. Must be at least 8 characters long, including letters, numbers, symbols, and at least one uppercase and one lowercase letter."
        required: true
        example: '"@123User"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      email: john.doe@example.com
      password: '"@123User"'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "message": "Login successful",
             "token": {
                 "access_token": "token_value",
                 "token_type": "Bearer"
             },
             "user": {
                 "id": 78,
                 "name": "John Doe",
                 "email": "john.doe@example.com",
                 "created_at": "2024-08-24T13:50:23.000000Z",
                 "updated_at": "2024-08-24T13:50:23.000000Z"
             }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
                "message": "Invalid credentials"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
                "message": "The selected email is invalid.",
             "errors": {
                 "email": [
                     "The selected email is invalid."
                 ],
                 "password": [
                     "The password field must be at least 8 characters.",
                     "The password field must contain at least one uppercase and one lowercase letter.",
                     "The password field must contain at least one symbol.",
                     "The password field must contain at least one number."
                 ]
             }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/auth/logout
    metadata:
      groupName: 'User management'
      groupDescription: |-

        This API provides comprehensive authentication management capabilities, including user registration, login, and logout operations.
        Its endpoints allow for secure user authentication, issuance of access tokens, ensuring data protection and adherence to security best practices.
      subgroup: ''
      subgroupDescription: ''
      title: 'Log out the user.'
      description: 'On this endpoint you log out the user and remove their Bearer token.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: ''
        headers: []
        description: 'No content'
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer khfV1b3Pag6e56c4D8dZvaE'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/password/email
    metadata:
      groupName: 'User management'
      groupDescription: |-

        This API provides comprehensive authentication management capabilities, including user registration, login, and logout operations.
        Its endpoints allow for secure user authentication, issuance of access tokens, ensuring data protection and adherence to security best practices.
      subgroup: ''
      subgroupDescription: ''
      title: "Change a user's password."
      description: "This endpoint generates and sends the email to reset the user's password."
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email of the user requesting password reset.'
        required: true
        example: john.doe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      email: john.doe@example.com
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Please check your mail to reset your password"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "message": "Error message"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "User not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []

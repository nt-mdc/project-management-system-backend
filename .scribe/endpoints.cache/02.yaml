## Autogenerated by Scribe. DO NOT MODIFY.

name: Tasks
description: |-

  The Tasks group includes endpoints designed for task management.
  It provides comprehensive functionality for handling tasks, covering all aspects from creation and viewing to updating and removal.
  This group offers a thorough approach to managing and maintaining tasks associated with the user.
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/v1/projects/{project_id}/tasks'
    metadata:
      groupName: Tasks
      groupDescription: |-

        The Tasks group includes endpoints designed for task management.
        It provides comprehensive functionality for handling tasks, covering all aspects from creation and viewing to updating and removal.
        This group offers a thorough approach to managing and maintaining tasks associated with the user.
      subgroup: ''
      subgroupDescription: ''
      title: 'List Tasks.'
      description: 'Retrieves a list of all tasks associated with the project.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: repellat
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      project_id: repellat
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              {
                "id": 1,
                "user_id": 1,
                "project_id": 1,
                "title": "Project Title",
                "description": "Project Description",
                "start_at": "2024-12-20",
                "end_at": "2025-01-20",
                "priority": "low",
                "status": "available-soon",
                "assigned_email": "testusedsar@email.com",
                "created_at": "2024-08-24T13:51:22.000000Z",
                "updated_at": "2024-08-24T13:51:22.000000Z",
                "comments": [
                        {
                          "id": 6,
                          "user_id": 78,
                          "task_id": 14,
                          "content": "comment content",
                          "created_at": "2024-08-24T15:58:57.000000Z",
                          "updated_at": "2024-08-24T15:58:57.000000Z"
                        }
                    ]
              }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "This project does not exist"
          }
        headers: []
        description: 'Project not found'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5kZa64aVeEg8Pbvd13hfcD6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/projects/{project_id}/tasks'
    metadata:
      groupName: Tasks
      groupDescription: |-

        The Tasks group includes endpoints designed for task management.
        It provides comprehensive functionality for handling tasks, covering all aspects from creation and viewing to updating and removal.
        This group offers a thorough approach to managing and maintaining tasks associated with the user.
      subgroup: ''
      subgroupDescription: ''
      title: 'Create Task.'
      description: "Creates a new task based on the provided information, adding it to the user's task set."
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: magnam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      project_id: magnam
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the project, must be at least 10 characters and a maximum of 150 characters.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: 'The description of the project, must be a minimum of 25 characters and a maximum of 1,500 characters.'
        required: true
        example: 'Ex consectetur quo odit explicabo.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      start_at:
        name: start_at
        description: 'The start date of the project in Y-m-d (2024-12-31) and must be a date after or equal to today.'
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      end_at:
        name: end_at
        description: 'The end date of the project in Y-m-d (2025-01-10) and must be a date after start at.'
        required: true
        example: dolorem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      status:
        name: status
        description: 'The status of the project.'
        required: true
        example: "'in-progress'"
        type: string
        enumValues:
          - "'available-soon'"
          - "'in-progress'"
          - "'done'"
        exampleWasSpecified: false
        custom: []
      priority:
        name: priority
        description: 'The priority of the project.'
        required: true
        example: "'low'"
        type: string
        enumValues:
          - "'low'"
          - "'medium'"
          - "'high'"
        exampleWasSpecified: false
        custom: []
      assigned_email:
        name: assigned_email
        description: 'The assigned_email of the project and there must be a user with that email'
        required: true
        example: heaney.raphael@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title: consequatur
      description: 'Ex consectetur quo odit explicabo.'
      start_at: aut
      end_at: dolorem
      status: "'in-progress'"
      priority: "'low'"
      assigned_email: heaney.raphael@example.net
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "title": "Task Title",
            "description": "Task Description",
            "start_at": "2024-12-31",
            "end_at": "2025-01-10",
            "status": "available-soon",
            "priority": "low",
            "assigned_email": " testuser@email.com",
            "project_id": 1,
            "user_id": 1,
            "updated_at": "2024-08-24T00:00:00.000000Z",
            "created_at": "2024-08-24T00:00:00.000000Z",
            "id": 1
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "This project does not belong to you"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "This project does not exist"
          }
        headers: []
        description: 'Project not found'
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The title field is required. (and 4 more errors)",
            "errors": {
              "title": ["The title field is required."],
              "description": ["The description field is required."],
              "start_at": ["The start_at field is required."],
              "end_at": ["The end_at field is required."],
              "status": ["The status field is required."],
              "priority": ["The priority field is required."],
              "assigned_email": ["The assigned_email field is required."]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The title field must be at least 10 characters. (and 4 more errors)",
            "errors": {
              "title": ["The title field must be at least 10 characters."],
              "description": ["The description field must be at least 25 characters."],
              "start_at": ["The start at field must be a date after or equal to today."],
              "end_at": ["The end at field must be a date after start at."],
              "status": ["The selected status is invalid."],
              "priority": ["The selected priority is invalid."],
              "assigned_email": ["The selected assigned_email is invalid."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer bvZ845kcdPDgaa1VfE6eh63'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/projects/{project_id}/tasks/{id}'
    metadata:
      groupName: Tasks
      groupDescription: |-

        The Tasks group includes endpoints designed for task management.
        It provides comprehensive functionality for handling tasks, covering all aspects from creation and viewing to updating and removal.
        This group offers a thorough approach to managing and maintaining tasks associated with the user.
      subgroup: ''
      subgroupDescription: ''
      title: 'View Task.'
      description: 'Retrieves details of a specific task, allowing for a complete view of the selected task’s information.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: natus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: assumenda
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      project_id: natus
      id: assumenda
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "id": 1,
             "user_id": 1,
             "project_id": 1,
             "title": "Project Title",
             "description": "Project Description",
             "start_at": "2024-12-20",
             "end_at": "2025-01-20",
             "priority": "low",
             "status": "available-soon",
             "assigned_email": "testusedsar@email.com",
             "created_at": "2024-08-24T13:51:22.000000Z",
             "updated_at": "2024-08-24T13:51:22.000000Z",
             "comments": [
                     {
                       "id": 6,
                       "user_id": 78,
                       "task_id": 14,
                       "content": "comment content",
                       "created_at": "2024-08-24T15:58:57.000000Z",
                       "updated_at": "2024-08-24T15:58:57.000000Z"
                     }
                 ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "This project does not exist"
          }
        headers: []
        description: 'Project not found'
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "This Task does not exist"
          }
        headers: []
        description: 'Task not found'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer EZbcge85Dvdk16f6a43aPhV'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/projects/{project_id}/tasks/{id}'
    metadata:
      groupName: Tasks
      groupDescription: |-

        The Tasks group includes endpoints designed for task management.
        It provides comprehensive functionality for handling tasks, covering all aspects from creation and viewing to updating and removal.
        This group offers a thorough approach to managing and maintaining tasks associated with the user.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Task.'
      description: 'Updates the information of an existing task based on the provided modifications.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: quis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: quia
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      project_id: quis
      id: quia
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the project, must be at least 10 characters and a maximum of 150 characters.'
        required: false
        example: veritatis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: 'The description of the project, must be a minimum of 25 characters and a maximum of 1,500 characters.'
        required: false
        example: 'Unde quaerat minus consectetur sequi.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      start_at:
        name: start_at
        description: 'The start date of the project in Y-m-d (2024-12-31) and must be a date after or equal to today.'
        required: false
        example: perferendis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      end_at:
        name: end_at
        description: 'The end date of the project in Y-m-d (2025-01-10) and must be a date after start at.'
        required: false
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      status:
        name: status
        description: 'The status of the project.'
        required: false
        example: "'available-soon'"
        type: string
        enumValues:
          - "'available-soon'"
          - "'in-progress'"
          - "'done'"
        exampleWasSpecified: false
        custom: []
      priority:
        name: priority
        description: 'The priority of the project.'
        required: false
        example: "'low'"
        type: string
        enumValues:
          - "'low'"
          - "'medium'"
          - "'high'"
        exampleWasSpecified: false
        custom: []
      assigned_email:
        name: assigned_email
        description: 'The assigned_email of the project and there must be a user with that email'
        required: false
        example: rosamond.gerhold@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title: veritatis
      description: 'Unde quaerat minus consectetur sequi.'
      start_at: perferendis
      end_at: qui
      status: "'available-soon'"
      priority: "'low'"
      assigned_email: rosamond.gerhold@example.com
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "title": "Task Title",
            "description": "Task Description",
            "start_at": "2024-12-31",
            "end_at": "2025-01-10",
            "status": "available-soon",
            "priority": "low",
            "assigned_email": " testuser@email.com",
            "project_id": 1,
            "user_id": 1,
            "updated_at": "2024-08-24T00:00:00.000000Z",
            "created_at": "2024-08-24T00:00:00.000000Z",
            "id": 1
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "This project does not belong to you"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "This project does not exist"
          }
        headers: []
        description: 'Project not found'
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "This Task does not exist"
          }
        headers: []
        description: 'Task not found'
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The title field must be at least 10 characters. (and 4 more errors)",
            "errors": {
              "title": ["The title field must be at least 10 characters."],
              "description": ["The description field must be at least 25 characters."],
              "start_at": ["The start at field must be a date after or equal to today."],
              "end_at": ["The end at field must be a date after start at."],
              "status": ["The selected status is invalid."],
              "priority": ["The selected priority is invalid."],
              "assigned_email": ["The selected assigned_email is invalid."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer c6aPD8k4hd1e3bVvE6Zagf5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/projects/{project_id}/tasks/{id}'
    metadata:
      groupName: Tasks
      groupDescription: |-

        The Tasks group includes endpoints designed for task management.
        It provides comprehensive functionality for handling tasks, covering all aspects from creation and viewing to updating and removal.
        This group offers a thorough approach to managing and maintaining tasks associated with the user.
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Task.'
      description: "Removes a specific task from the user's task set, permanently deleting it."
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: enim
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: vero
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      project_id: enim
      id: vero
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: ''
        headers: []
        description: 'No content'
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "This project does not belong to you"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "This task does not belong to you"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "This project does not exist"
          }
        headers: []
        description: 'Project not found'
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "This task does not exist"
          }
        headers: []
        description: 'Task not found'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer fac4VEdgPk8hDb5a6Z6e3v1'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/assigned-tasks
    metadata:
      groupName: Tasks
      groupDescription: |-

        The Tasks group includes endpoints designed for task management.
        It provides comprehensive functionality for handling tasks, covering all aspects from creation and viewing to updating and removal.
        This group offers a thorough approach to managing and maintaining tasks associated with the user.
      subgroup: ''
      subgroupDescription: ''
      title: 'Assigned Tasks.'
      description: 'Retrieves a list of tasks assigned to the user, allowing them to view tasks under their responsibility.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              {
                "id": 1,
                "user_id": 1,
                "project_id": 1,
                "title": "Project Title",
                "description": "Project Description",
                "start_at": "2024-12-20",
                "end_at": "2025-01-20",
                "priority": "low",
                "status": "available-soon",
                "assigned_email": "testusedsar@email.com",
                "created_at": "2024-08-24T13:51:22.000000Z",
                "updated_at": "2024-08-24T13:51:22.000000Z",
              }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Efekh8DP1cV546da63Zvbga'
    controller: null
    method: null
    route: null
    custom: []
